package com.javaoffers.brief.modelhelper.utils;

import com.javaoffers.brief.modelhelper.anno.derive.JsonColumn;
import com.javaoffers.brief.modelhelper.anno.derive.flag.Version;
import com.javaoffers.brief.modelhelper.core.Id;
import com.javaoffers.brief.modelhelper.filter.JqlMetaInfo;

import java.sql.Statement;

/**
 * database type
 * @author mingJie
 */
public enum DBType {

    MYSQL {
        @Override
        public boolean isSupportDuplicateModify() {
            return true;
        }
    },

    H2 {
        @Override
        public boolean isSupportDuplicateModify() {
            return true;
        }
    },

    ORACLE{
        @Override
        public boolean isSupportDuplicateModify() {
            return true;
        }
        @Override
        public int getAutoGeneratedKeys() {
            return Statement.NO_GENERATED_KEYS;
        }
    },

    SQL_SERVER {
        @Override
        public String toString() {
            return "sqlserver";
        }

        @Override
        public boolean isSupportDuplicateModify() {
            return true;
        }
    },

    CLICK_HOUSE {
        @Override
        public String toString() {
            return "ch";
        }
        @Override
        public int getAutoGeneratedKeys() {
            return Statement.NO_GENERATED_KEYS;
        }
    },

    CLICKHOUSE {
        @Override
        public String toString() {
            return "clickhouse";
        }

        @Override
        public int getAutoGeneratedKeys() {
            return Statement.NO_GENERATED_KEYS;
        }
    }
    ;

    //processingTranslation
    public Object processingTranslation(JqlMetaInfo jqlMetaInfo, String key, Object value){
        if (value instanceof Id) {
            value = ((Id) value).value();
        } else if (value instanceof Enum) {
            value = EnumValueUtils.getEnumValue(((Enum) value));
        }else if(value instanceof Version){
            value = ((Version) value).longValue();
        } else if(value instanceof JsonColumn){
            value = GsonUtils.gson.toJson(value);
        }
        return value;
    }

    //Whether to support conflict updates
    public boolean isSupportDuplicateModify(){
        return false;
    }

    //Whether to support automatic generation of ids
    public int getAutoGeneratedKeys(){
        return Statement.RETURN_GENERATED_KEYS;
    }

    public String toString(){
        return name();
    }

}
